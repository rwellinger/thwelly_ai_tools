"""Add is_instrumental field to songs table

Revision ID: ff0ed3b184db
Revises: 91c1fff66986
Create Date: 2025-09-25 16:05:57.220240

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff0ed3b184db'
down_revision: Union[str, Sequence[str], None] = '91c1fff66986'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_generated_images_created_search'), table_name='generated_images')
    op.drop_index(op.f('idx_generated_images_prompt_gin'), table_name='generated_images', postgresql_ops={'prompt': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('idx_generated_images_title_gin'), table_name='generated_images', postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_constraint(op.f('uq_prompt_category_action'), 'prompt_templates', type_='unique')
    op.add_column('songs', sa.Column('is_instrumental', sa.Boolean(), nullable=True))
    op.drop_index(op.f('idx_songs_created_search'), table_name='songs')
    op.drop_index(op.f('idx_songs_lyrics_gin'), table_name='songs', postgresql_ops={'lyrics': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('idx_songs_tags_gin'), table_name='songs', postgresql_ops={'tags': 'gin_trgm_ops'}, postgresql_using='gin')
    op.drop_index(op.f('idx_songs_title_gin'), table_name='songs', postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_songs_title_gin'), 'songs', ['title'], unique=False, postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('idx_songs_tags_gin'), 'songs', ['tags'], unique=False, postgresql_ops={'tags': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('idx_songs_lyrics_gin'), 'songs', ['lyrics'], unique=False, postgresql_ops={'lyrics': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('idx_songs_created_search'), 'songs', ['created_at', 'title', 'lyrics'], unique=False)
    op.drop_column('songs', 'is_instrumental')
    op.create_unique_constraint(op.f('uq_prompt_category_action'), 'prompt_templates', ['category', 'action'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_generated_images_title_gin'), 'generated_images', ['title'], unique=False, postgresql_ops={'title': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('idx_generated_images_prompt_gin'), 'generated_images', ['prompt'], unique=False, postgresql_ops={'prompt': 'gin_trgm_ops'}, postgresql_using='gin')
    op.create_index(op.f('idx_generated_images_created_search'), 'generated_images', ['created_at', 'title', 'prompt'], unique=False)
    # ### end Alembic commands ###
