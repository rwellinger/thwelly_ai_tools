services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - webui-net
    command: redis-server --appendonly yes
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 3

  celery-worker:
    container_name: celery-worker
    restart: unless-stopped
    build: .
    command: celery -A celery_app.celery_config:celery_app worker --loglevel=info --concurrency=1
    user: "1000:1000"
    depends_on:
      - redis
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - DEBUG=false
    volumes:
      - .:/app
    networks:
      - webui-net

  aiproxy-app:
    container_name: aiproxysrv
    restart: unless-stopped
    build: .
    ports:
      - "5050:5050"
    env_file: .env
    environment:
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - DEBUG=false
    volumes:
      - .:/app
      - images-data:/images
    networks:
      - webui-net
    depends_on:
      - redis
      - celery-worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres-data:
  redis-data:
  images-data:

networks:
  webui-net:
    external: true
    name: webui-network
